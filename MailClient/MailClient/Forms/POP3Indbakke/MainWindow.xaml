<UserControl x:Class="MailClient.Forms.POP3Indbakke.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:properties="clr-namespace:MailClient.Properties"
        xmlns:nsmvvm="clr-namespace:MailClient.Forms.POP3Indbakke.NS.MVVM"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" 
        d:DesignHeight="710" d:DesignWidth="990">


    <Grid>
        <Grid x:Name="MailGrid" Opacity="{Binding MailGridOpacity}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ToolBar Grid.Row="0"  ToolBarTray.IsLocked="True" IsEnabled="{Binding IsToolbarAvailable}">
                <Button Margin="3,0,3,0" Command="{Binding RefreshCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="32" Source="Icons/Refresh.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Image.Source" Value="Icons/Refresh.png" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="True">
                                            <Setter Property="Image.Source" Value="Icons/RefreshGray.png" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock VerticalAlignment="Center">Refresh</TextBlock>
                    </StackPanel>
                </Button>
                <Button Margin="3,0,3,0" Command="{Binding CancelCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="32">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Image.Source" Value="Icons/CancelGray.png" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="True">
                                            <Setter Property="Image.Source" Value="Icons\Cancel.png" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock VerticalAlignment="Center">Cancel</TextBlock>
                    </StackPanel>
                </Button>
                <Button Margin="3,0,3,0" Command="{Binding ShowChatLogCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="32">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Image.Source" Value="Icons\ShowLogGray.png" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="True">
                                            <Setter Property="Image.Source" Value="Icons\ShowLog.png" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock VerticalAlignment="Center">Chat Log</TextBlock>
                    </StackPanel>
                </Button>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,6"/>
                <Button Margin="3,0,3,0" Click="Button_Click">
                    <StackPanel Orientation="Horizontal">
                        <Image Width="32">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Image.Source" Value="Icons\Back.png" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="True">
                                            <Setter Property="Image.Source" Value="Icons\Back.png" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock VerticalAlignment="Center"> Back to main menu</TextBlock>
                    </StackPanel>
                </Button>
            </ToolBar>

            <Grid Grid.Row="1">
                <ListView ItemsSource="{Binding Mails}" x:Name="mailListView" 
                          
                         >
                    <ListView.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF0E779E" Offset="0.004"/>
                            <GradientStop Color="#FF00AEFF" Offset="1"/>
                        </LinearGradientBrush>
                    </ListView.Background>
                    <ListView.View>
                        <GridView AllowsColumnReorder="true" 
                                  >
                            <GridViewColumn DisplayMemberBinding="{Binding Path=Message.From}" Header="From" Width="250"/>
                            <GridViewColumn DisplayMemberBinding="{Binding Path=Message.Subject}" Header="Subject" Width="300"/>
                            <GridViewColumn DisplayMemberBinding="{Binding Path=ReceivedTime}" Header="Date" Width="200"/>
                            <GridViewColumn DisplayMemberBinding="{Binding Path=Message.Attachments.Count}" Header="Attachments" Width="100"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>

            <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                          Background="Gray" ShowsPreview="True" Height="4" />

            <Grid Grid.Row="3" DataContext="{Binding ElementName=mailListView, Path=SelectedItem.Message}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBox Grid.Row="0" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Text="{Binding Body}" Grid.ColumnSpan="2" Margin="0,0,-0.6,3.8" Grid.RowSpan="2" >
                    <TextBox.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF00AEFF" Offset="0"/>
                            <GradientStop Color="#FF0E779E" Offset="0.983"/>
                        </LinearGradientBrush>
                    </TextBox.Background>
                </TextBox>
                <ListBox Grid.Row="1" ItemsSource="{Binding Attachments}" Grid.ColumnSpan="2" Margin="0,0.2,0.4,-0.2" >
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid  Height="40" Width="70"
                                  Tag="{Binding ElementName=MailGrid, Path=DataContext}">
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Save" 
                                                  DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget}"
                                                  Command="{Binding Tag.SaveFileCommand}"
                                                  CommandParameter="{Binding DataContext}" />
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <StackPanel Margin="5" Tag="{Binding Name}">
                                    <StackPanel.ToolTip>
                                        <ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={x:Static RelativeSource.Self}}"
                                                 Content="{Binding Tag}" />
                                    </StackPanel.ToolTip>
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" />
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>

            <StatusBar Grid.Row="4" >
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0,0,5,0">Mail stats:</TextBlock>
                    <TextBlock Margin="0,0,5,0" MinWidth="200" Text="{Binding MailStatsText}" />
                    <TextBlock Margin="0,0,5,0">Fetch status:</TextBlock>
                    <TextBlock Margin="0,0,5,0" Text="{Binding FetchStatusText}" />
                </StackPanel>
            </StatusBar>

        </Grid>

        <Grid x:Name="LoginGrid" Width="500" Height="400" Visibility="{Binding LoginGridVisibility}" 
               FocusManager.FocusedElement="{Binding ElementName=hostTextBox}">
            <Border BorderThickness="0,0,5,5" BorderBrush="Black"  CornerRadius="15" Background="#FF0E779E" Margin="10,0,-10,0">
                <Border.Effect>
                    <DropShadowEffect />
                </Border.Effect>
                <StackPanel>
                    <StackPanel >
                        <StackPanel.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF0E779E" Offset="0.865"/>
                                <GradientStop Color="#FF00AEFF"/>
                            </LinearGradientBrush>
                        </StackPanel.Background>
                        <TextBlock HorizontalAlignment="Center"  Margin="5" FontSize="22">POP Settings</TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock Width="150">Host:</TextBlock>
                        <TextBox x:Name="hostTextBox" Width="332" Height="34" Text="{Binding Source={x:Static properties:Settings.Default}, Path=Host}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock Width="150">Port:</TextBlock>
                        <TextBox Width="70" Height="34" Text="{Binding Source={x:Static properties:Settings.Default}, Path=Port}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock Width="150">Username:</TextBlock>
                        <TextBox Width="332" Height="34" Text="{Binding Source={x:Static properties:Settings.Default}, Path=Username}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock Width="150">Password:</TextBlock>
                        <PasswordBox x:Name="PasswordBoxPOP" Width="332" Height="34" 
                                     nsmvvm:PasswordBoxBindingBehavior.EnableBinding="True"
                                     nsmvvm:PasswordBoxBindingBehavior.BoundPassword="{Binding PopPassword, Mode=TwoWay}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock Width="150">Enable SSL:</TextBlock>
                        <CheckBox VerticalAlignment="Center" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=EnableSsl}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5" ToolTip="Disabled in the demo to protect against accidental deletions.">
                        <TextBlock Width="150" Foreground="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}">Delete on Pop:</TextBlock>
                        <CheckBox VerticalAlignment="Center" IsEnabled="False" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=DeleteMailAfterPop}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <TextBlock Width="150">Timeout:</TextBlock>
                        <TextBox Width="70" Height="34" Text="{Binding Source={x:Static properties:Settings.Default}, Path=Timeout}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="5" HorizontalAlignment="Right">
                        <Button Command="{Binding FetchMailCommand}" Width="100" Margin="5" Content="Ok">
                            <Button.Effect>
                                <DropShadowEffect/>
                            </Button.Effect>
                        </Button>
                        <Button  Width="100" Margin="5" Click="Button_Click_1">
                            <Button.Effect>
                                <DropShadowEffect/>
                            </Button.Effect> Cancel
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</UserControl>
